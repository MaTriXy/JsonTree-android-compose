plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
}

android {
    namespace="com.sebastianneubauer.jsontreedemo"
    compileSdk libs.versions.android.target.get().toInteger()

    defaultConfig {
        applicationId "com.sebastianneubauer.jsontreedemo"
        minSdk libs.versions.android.min.get().toInteger()
        targetSdk libs.versions.android.target.get().toInteger()
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        debug {}
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //for testing only, don't do this in your app
            signingConfig signingConfigs.debug
        }
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidx.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(libs.versions.java.toolchain.get()))
    }
}

dependencies {
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.activity.compose
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.compose.ui.tooling.preview

    implementation project(":jsontree")
}